{
 "Resources": {
  "userinfo3B0496F0": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/user_info/Resource"
   }
  },
  "producerlambdafunctionServiceRole5400FE21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/ServiceRole/Resource"
   }
  },
  "producerlambdafunctionServiceRoleDefaultPolicy727DC938": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "userinfo3B0496F0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "producerlambdafunctionServiceRoleDefaultPolicy727DC938",
    "Roles": [
     {
      "Ref": "producerlambdafunctionServiceRole5400FE21"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "producerlambdafunctionCE724CE7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c0be9017eb2acbeca5b50111ac4bc00cbd8118f20aef99b7bda869c4daed1615.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "userinfo3B0496F0"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "producerlambdafunctionServiceRole5400FE21",
      "Arn"
     ]
    },
    "Runtime": "python3.11"
   },
   "DependsOn": [
    "producerlambdafunctionServiceRoleDefaultPolicy727DC938",
    "producerlambdafunctionServiceRole5400FE21"
   ],
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/producer_lambda_function/Resource",
    "aws:asset:path": "asset.c0be9017eb2acbeca5b50111ac4bc00cbd8118f20aef99b7bda869c4daed1615",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "consumerlambdafunctionServiceRole116B0746": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/ServiceRole/Resource"
   }
  },
  "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "userinfo3B0496F0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025",
    "Roles": [
     {
      "Ref": "consumerlambdafunctionServiceRole116B0746"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "consumerlambdafunction40710347": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "97857984b676fcd9fbb372426be650e34bb7fe88127aa8cc82f52cc0b2bbe270.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "userinfo3B0496F0"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "consumerlambdafunctionServiceRole116B0746",
      "Arn"
     ]
    },
    "Runtime": "python3.11"
   },
   "DependsOn": [
    "consumerlambdafunctionServiceRoleDefaultPolicy3D6F3025",
    "consumerlambdafunctionServiceRole116B0746"
   ],
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/consumer_lambda_function/Resource",
    "aws:asset:path": "asset.97857984b676fcd9fbb372426be650e34bb7fe88127aa8cc82f52cc0b2bbe270",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "onehourruleB6EA11CB": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "producerlambdafunctionCE724CE7",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "consumerlambdafunction40710347",
        "Arn"
       ]
      },
      "Id": "Target1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/one_hour_rule/Resource"
   }
  },
  "onehourruleAllowEventRuledynamodblambdaproducerlambdafunction1E714662B9E4C659": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "producerlambdafunctionCE724CE7",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "onehourruleB6EA11CB",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/one_hour_rule/AllowEventRuledynamodblambdaproducerlambdafunction1E714662"
   }
  },
  "onehourruleAllowEventRuledynamodblambdaconsumerlambdafunction1EF0C7D66FA0440E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "consumerlambdafunction40710347",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "onehourruleB6EA11CB",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/one_hour_rule/AllowEventRuledynamodblambdaconsumerlambdafunction1EF0C7D6"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01PzU7DMAx+lt1TjzH2AGwS56pwn9zEDNMmkeoEVEV593nZkDh9f7b1+Rl2uxd42uCvdNZN3cwjlPeEdjJqnYtbA/ro1PzAcSZz+gyNVDOjHx1CecvBJo7hFv3nPS2eRVRVw+ihDPG+37CPM9u1zTVWjezPKEJJ4PUGquGY7UTpiEKGfihoVIb8OKJYqxlIYl4smbajvS8cLi3/C5SfYnCcWpF+TV8xbPf6NRw238LcLTkk9gTDHa8gzO6ZEQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "dynamodb-lambda/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}